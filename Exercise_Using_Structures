#include "stdafx.h"
#include "string.h"
#include "stdlib.h"
#include "stdio.h"
#include "ctype.h"
#include "math.h"

struct date

{

	int day, month, year;

};

struct student

{

	char firstName[50];
	char lastName[50];
	int ID;
	struct date DOB;

};


int addStudent(struct student students[], int numStudents);
void printStudents(struct student students[], int numStudents);
void sortByID(struct student students[], int numStudents);
void sortBySurname(struct student students[], int numStudents);
int trackNumStudents(int tracker);

int main()

{

	int i = 1;

	do {

		struct student students[100] = { {"Rolando", "Gamble", 17560001, {1, 1, 2000}},
		{"Kyra", "Eaton", 17973061, {11, 10, 2016}},
		{"Chandler", "Humphrey", 17427400, {6, 12, 1999}},
		{"Makayla", "Huang", 17127058, {2, 2, 2000}},
		{"Jazmyn", "Terrell", 17746780, {29, 6, 2000}},
		{"Erica", "Glass", 17058753, {13, 7, 2000}},
		{"Alyvia", "Blair", 17599020, {11, 8, 2000}},
		{"Talia", "Chen", 17619205, {17, 10, 2000}},
		{"Rebekah", "Hopkins", 17912255, {25, 11, 2000}},
		{"Jocelynn", "Ware", 17899236, {27, 4, 1999}} };

		int tracker = 10;
		int numStudents = trackNumStudents(tracker);

		// use addStudent to add a new student and it returns the updated number of students
		// obviously, numStudents is the number of structures in the array (students[]) that contain data
		printf_s("Welcome to the Student Registration Program. \n");
		numStudents = addStudent(students, numStudents);

		// sort by ID number and print out list
		sortByID(students, numStudents);
		printf("\n\n%d Students, Sorted by ID: \n", numStudents + 1);
		printStudents(students, numStudents);

		// sort by surname and print out list
		sortBySurname(students, numStudents);
		printf("\n\n%d Students, Sorted by Surname: \n", numStudents + 1);
		printStudents(students, numStudents);

		printf_s("Do you wish to run the program again? Press 1 for Yes and 0 for No.");
		scanf("%d", &i);

	} while (i != 0);

	return 0;

}

int addStudent(struct student students[], int numStudents)

{

	char first[50], last[50];
	int id, dd, mm, yyyy, i, tracker;

	// Ask user for data for new student and add to the array of students
	// your code here

	printf_s("Use the following format : First-Name Last-Name ID Day/Month/Year\n");
	printf_s("How many new students do you wish to enter?");
	scanf("%d", &i);
	tracker = i;
	trackNumStudents(tracker);

	for (i = 0; i <= trackNumStudents(tracker); i++)

	{

		printf_s("Please enter Student No. %d's Details into the System : \n", trackNumStudents(tracker));
		printf_s("First Name : ");
		scanf("%s", first);
		printf_s("Last Name : ");
		scanf("%s", last);
		printf_s("I.D. : ");
		scanf("%d", &id);
		printf_s("Day : ");
		scanf("%d", &dd);
		printf_s("Month : ");
		scanf("%d", &mm);
		printf_s("Year : ");
		scanf("%d", &yyyy);

		strcpy(students[numStudents].firstName, first);
		strcpy(students[numStudents].lastName, last);
		students[numStudents].ID = id;
		students[numStudents].DOB.day = dd;
		students[numStudents].DOB.month = mm;
		students[numStudents].DOB.year = yyyy;

	}

	return numStudents;

}

int trackNumStudents(int tracker)

{

	tracker++;

	return tracker;

}

void printStudents(struct student students[], int numStudents)

{

	int i;

	printf("%20s %20s %15s \t %10s \n", "First Name", "Surname", "ID Number", "DOB");
	// write a for loop to print out each student structure
	// your code here

	for (i = 0; i <= numStudents; i++)

	{

		printf("%20s %20s %15d %10d/%d/%d \n", students[i].firstName, students[i].lastName, 
			students[i].ID, students[i].DOB.day, students[i].DOB.month, students[i].DOB.year);

	}

}

void sortByID(struct student students[], int numStudents)

{

	struct student temp;
	int i, j;

	// use the Bubble sort algorithm to sort the students by ID
	// your code here

	for (i = 0; i <= numStudents; i++)

	{

		for (j = 0; j <= numStudents - 1; j ++)

		{

			if (students[j].ID > students[j + 1].ID)

			{

				temp = students[j];
				students[j] = students[j + 1];
				students[j + 1] = temp;

			}

		}

	}

}

void sortBySurname(struct student students[], int numStudents)

{

	struct student temp;
	int i, j;

	// use the Bubble sort algorithm to sort the students by Surname
	// your code here

	for (i = 0; i <= numStudents; i++)

	{

		for (j = 0; j <= numStudents - 1; j++)

		{

			int value = strcmp(students[j].lastName, students[j + 1].lastName);

			if (value >= 1)

			{

				temp = students[j];
				students[j] = students[j + 1];
				students[j + 1] = temp;

			}

		}

	}

}
